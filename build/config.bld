/*
 * Copyright (c) 2011-2015, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var Build = xdc.useModule('xdc.bld.BuildEnvironment');

var commonBld = xdc.loadCapsule("../build/common.bld");
var commonOpts = "-g";

var targetName;
var target;
var rootDir;

// Logic to support load_type=LOAD_ON build options
for (x = 0; x < arguments.length; x++)
{
    if (arguments[x].match(/^trace_level=/) )
    {
        // [1] operation is used on the return value of split(), which is an
        // array.
        var trace_level = arguments[x].split("=")[1];
    }
    if (arguments[x].match(/^gnu.targets.arm.M3=/) )
    {
        targetName = arguments[x].split("=")[0];
        rootDir = arguments[x].split("=")[1];
        /* only build for the specified compilers */
        if (rootDir == "" || rootDir == undefined) {
            continue;
        }
        target = xdc.useModule(targetName);
        target.rootDir = rootDir;
        target.ccOpts.suffix += " -g -D___DSPBIOS___ -DCORE0 -DHOST_TYPE=HOST_UNKNOWN -DBUILD_FOR_SMP ";
        target.platforms = [ "ti.platform.omap4430.ipu" ];
        target.platform = target.platforms[0];
    }
    if (arguments[x].match(/^ti.targets.arm.elf.M3=/) )
    {
        targetName = arguments[x].split("=")[0];
        rootDir = arguments[x].split("=")[1];
        /* only build for the specified compilers */
        if (rootDir == "" || rootDir == undefined) {
            continue;
        }
        target = xdc.useModule(targetName);
        target.rootDir = rootDir;
        target.ccOpts.suffix += " -g --gcc -D___DSPBIOS___ -DCORE0 -ms -pden -pds=48 -pdew -DHOST_TYPE=HOST_UNKNOWN -DBUILD_FOR_SMP ";
        target.lnkOpts.suffix += " -x --retain=.resource_table --cinit_compression=off --diag_suppress=16032 ";
        target.platforms = [ "ti.platform.omap4430.ipu" ];
        target.platform = target.platforms[0];
    }
}

if(trace_level == 0) {
    target.ccOpts.suffix += " -DDCE_DEBUG_LEVEL=0";
} else if(trace_level == 1) {
    target.ccOpts.suffix += " -DDCE_DEBUG_ENABLE";
    target.ccOpts.suffix += " -DDCE_DEBUG_LEVEL=1";
} else if(trace_level == 2) {
    target.ccOpts.suffix += " -DDCE_DEBUG_ENABLE";
    target.ccOpts.suffix += " -DDCE_DEBUG_LEVEL=2";
} else if(trace_level == 3) {
    target.ccOpts.suffix += " -DDCE_DEBUG_ENABLE";
    target.ccOpts.suffix += " -DDCE_DEBUG_LEVEL=3";
} else if(trace_level >= 4) {
    target.ccOpts.suffix += " -DDCE_DEBUG_ENABLE";
    target.ccOpts.suffix += " -DDCE_DEBUG_LEVEL=4";
}

Build.targets.$add(target);
var Pkg = xdc.module("xdc.bld.PackageContents");
