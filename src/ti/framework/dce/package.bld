/*
 * Copyright (c) 2011, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/*
 *  ======== package.bld ========
 */
/* explicit references to global objects */
var Build = xdc.useModule('xdc.bld.BuildEnvironment');
var Pkg = xdc.useModule('xdc.bld.PackageContents');
var commonBld = xdc.loadCapsule("../build/common.bld");

/* clean lib folder */
//Pkg.generatedFiles.$add("lib/");
//Pkg.libDir = "package/";
var compileOpts = "-DCORE0 --gcc "


/*
 *  Export everything necessary to build this package with (almost) no
 *  generated files.
 */
//Pkg.attrs.exportAll = true;

var LIB_NAME = "lib/" + Pkg.name;
var objList = ["dce.c", "ivahd.c"];


var profiles  = commonBld.getProfiles(arguments);
/* If no profiles were assigned, build for release */
if (profiles.length == 0) {
    profiles[0] = "release";
}

coreNames = commonBld.getCores(arguments);

if (coreNames.length==0) {
    /* select default as ipu */
    commonBld.buildLibs(objList, null, arguments, compileOpts,"ipu");
}
else {
    for (var j = 0; j < coreNames.length; j++) {
        var coreName = coreNames[j];

        /* skip core if not supported */
        if (!commonBld.supportsCore(coreName, null)) {
            continue;
        }

        /* generate makefiles */
        commonBld.buildLibs(objList, null, arguments, compileOpts, coreName);
        print("built for coreName =" + coreName);
    }
    print("end of For loop ************");
}

